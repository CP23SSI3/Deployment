version: '3.3'

services:

  mysqldb:
    container_name: mysqldb
    image: mysql
    environment:
      MYSQL_ROOT_PASSWORD: cp23ssi3
      MYSQL_DATABASE: internhub
    ports:
      - 3306:3306
    volumes:
      - "../DB:/docker-entrypoint-initdb.d"
      - "../DB/data:/var/lib/mysql"
    restart: on-failure

  backend:
    container_name: backend
    depends_on:
      - mysqldb
    build: ../Backend/
    restart: on-failure
    # ports:
    #   - 8080:8080
    volumes:
      - ".m2:/root/.m2"
    environment:
      - spring.datasource.url=jdbc:mysql://10.4.85.53:3306/internhub

  frontend:
    container_name: frontend
    depends_on:
      - backend
      # - mysqldb
    # ports:           #ถ้าใส่ reverse-proxy จะไม่ต้องใส่ port
    #   - 80:3000
    # image: node:latest
    build: ../Frontend
    restart: on-failure

  proxy:
    container_name: proxy
    image: nginx:stable-alpine
    restart: on-failure
    depends_on:
      - frontend
    ports:
      - 80:3000
      - 443:443
      # - 8080:8080
    volumes:
      - "./nginx/config/conf.d/default.conf:/etc/nginx/conf.d/default.conf:rw"
      - "../ssl/:/etc/ssl/:rw"
      # - "./nginx/config/nginx.conf:/etc/nginx/conf.d/default.conf:ro"
      # - "~/ssl/cp23ssi3a.crt:/ssl/cp23ssi3a.crt"
      # - "~/ssl/privatekey.key:/ssl/privatekey.key"


  # reverse-proxy:
  #   container_name: reverse-proxy
  #   depends_on:
  #     - frontend
  #   ports:
  #     - 8080:8080
  #     - 80:3000
  #   image: nginx
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf
  #   restart: on-failure
  # links:
  #   - frontend
# networks:
#   db_network:
#     driver: bridge
#   be_network:
#     driver: bridge
